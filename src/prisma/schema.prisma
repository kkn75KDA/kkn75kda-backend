generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  nama      String   @db.VarChar(30)
  email     String   @unique
  password  String   @db.VarChar(20)
  avatar    String   @default("https://ik.imagekit.io/qlxmzsojb/KKN75/user.png?updatedAt=1690285305263")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Pekerjaan {
  id       Int        @id @default(autoincrement())
  nama     String     @db.VarChar(30)
  Penduduk Penduduk[]
}

model Pendidikan {
  id       Int        @id @default(autoincrement())
  nama     String     @db.VarChar(30)
  Penduduk Penduduk[]
}

model Penduduk {
  nik           String          @id @unique
  namaLengkap   String          @db.VarChar(30)
  gender        Gender
  tempat_lahir  String          @db.VarChar(30)
  tanggal_lahir String
  no_hp         String          @db.VarChar(13)
  agama         String          @db.VarChar(20)
  pendidikan_id Int
  pendidikan    Pendidikan      @relation(fields: [pendidikan_id], references: [id])
  pekerjaan_id  Int
  pekerjaan     Pekerjaan       @relation(fields: [pekerjaan_id], references: [id])
  status        String
  PerangkatDesa PerangkatDesa[]
  KartuKeluarga KartuKeluarga[]
}

enum Gender {
  L
  P
}

model Asset {
  id         Int         @id @default(autoincrement())
  nama_asset String      @db.VarChar(50)
  DataAsset  DataAsset[]
}

model Penghasilan {
  id          Int         @id @default(autoincrement())
  penghasilan Int
  DataAsset   DataAsset[]
}

model KartuKeluarga {
  no_kk     String      @id @unique
  nik       Penduduk    @relation(fields: [nik_id], references: [nik], onDelete: Cascade, onUpdate: Cascade)
  nik_id    String
  rt        String      @db.VarChar(3)
  rw        String      @db.VarChar(3)
  dusun     String      @db.VarChar(300)
  DataAsset DataAsset[]
}

model DataAsset {
  id             Int           @id @default(autoincrement())
  no_kk          KartuKeluarga @relation(fields: [no_kk_id], references: [no_kk], onDelete: Cascade, onUpdate: Cascade)
  no_kk_id       String
  asset          Asset         @relation(fields: [asset_id], references: [id])
  asset_id       Int
  jumlah         Int
  penghasilan    Penghasilan   @relation(fields: [penghasilan_id], references: [id])
  penghasilan_id Int
}

model Tag {
  id      Int       @id @default(autoincrement())
  nama    String    @db.VarChar(30)
  Artikel Artikel[]
}

model Artikel {
  id        Int      @id @default(autoincrement())
  thumbnail String
  judul     String   @db.VarChar(40)
  isi       String   @db.Text
  tag_id    Int
  tag       Tag      @relation(fields: [tag_id], references: [id])
  createdAt DateTime @default(now()) @db.Timestamp()
  updatedAt DateTime @default(now()) @db.Timestamp()
}

model Jabatan {
  id            Int             @id @default(autoincrement())
  nama          String          @db.VarChar(40)
  PerangkatDesa PerangkatDesa[]
}

model PerangkatDesa {
  id         Int      @id @default(autoincrement())
  nik_id     String
  nik        Penduduk @relation(fields: [nik_id], references: [nik])
  photo      String
  jabatan_id Int
  jabatan    Jabatan  @relation(fields: [jabatan_id], references: [id])
}

model Agenda {
  id      Int    @id @default(autoincrement())
  judul   String @db.VarChar(50)
  tempat  String @db.VarChar(50)
  tanggal String
  waktu   String
}
